1. Setting Ubuntu to boot in text
systemctl set-default multi-user.target

restore
systemctl set-default graphical.target

It is to change this file:
/etc/systemd/system/default.target


2. Enabling network connection before user login

For all people who is using Ubuntu 16. You should go to /etc/NetworkManager/system-connections/ 
Where you'll see the file which contains your internet settings. 
Edit it, find the line with permission and delete all after = Restart and you can connect before login


3. query the file list in a debian package
dpkg-query -L package-name

package info are located in directory:
/var/lib/dpkg/info

4. pip upgrade (Unbuntu 16.04)

pip install --upgrade pip won't work in Ubuntu.
Pleasae try this solution:

wget https://pypi.python.org/packages/e7/a8/7556133689add8d1a54c0b14aeff0acb03c64707ce100ecd53934da1aa13/pip-8.1.2.tar.gz

tar -xzvf pip-8.1.2.tar.gz

cd pip-8.1.2

sudo python setup.py install


5. Multi-Arch

Ref: https://wiki.debian.org/Multiarch/HOWTO
Add:
dpkg --add-architecture <arch>
apt-get update
Remove:
dpkg --remove-architecture <arch>
apt-get purge ".*:<arch>"

Exapmle:

eb [arch=amd64] http://cn.archive.ubuntu.com/ubuntu xenial main restricted universe multiverse
deb [arch=amd64] http://cn.archive.ubuntu.com/ubuntu xenial-updates main restricted universe multiverse
deb [arch=amd64] http://security.ubuntu.com/ubuntu xenial-security main restricted universe multiverse

deb [arch=arm64] http://ports.ubuntu.com/ xenial main universe
deb-src [arch=arm64] http://ports.ubuntu.com/ xenial main universe



6. PAE

Add the PAE flag to processor information 

To add the PAE flag to the processor information stored in /proc/cpuinfo, run the following:

  cat /proc/cpuinfo | sed 's/flags\t*:/& pae/' > /tmp/cpuinfo_pae
  sudo mount -o bind /tmp/cpuinfo_pae /proc/cpuinfo
  sudo mount -o remount,ro,bind /proc/cpuinfo
After you have ran those commands, run

  grep flags /proc/cpuinfo
If the flag was correctly added, the command returns a line that starts with "flags :" and contains the flag "pae".



7. Boot ubuntu into Text

sudo systemctl set-default multi-user.target

8. Setup Wifi in command line

nmcli device wifi connect APNAME password PASSWD


9. Device tree check
(1) /proc/device-tree
(2) dtc -I fs /sys/firmware/devicetree/base


10. search mirror site

#!/bin/bash

# URL of the Launchpad mirror list
MIRROR_LIST=https://launchpad.net/ubuntu/+archivemirrors

# Set to the architecture you're looking for (e.g., amd64, i386, arm64, armhf, armel, powerpc, ...).
# See https://wiki.ubuntu.com/UbuntuDevelopment/PackageArchive#Architectures
ARCH=${1:-"arm64"}
# Set to the Ubuntu distribution you need (e.g., precise, saucy, trusty, ...)
# See https://wiki.ubuntu.com/DevelopmentCodeNames
DIST=${2:-"xenial"}
# Set to the repository you're looking for (main, restricted, universe, multiverse)
# See https://help.ubuntu.com/community/Repositories/Ubuntu
REPO=${3:-"main"}

# First, we retrieve the Launchpad mirror list, and massage it to obtain a newline-separated list of HTTP mirrors
for url in $(curl -s $MIRROR_LIST | grep -Po 'http://.*(?=">http</a>)'); do
  # If you like some output while the script is running (feel free to comment out the following line)
  echo "Processing $url..."
  # retrieve the header for the URL $url/dists/$DIST/$REPO/binary-$ARCH/; check if status code is of the form 2.. or 3..
  curl -s --head $url/dists/$DIST/$REPO/binary-$ARCH/ | head -n 1 | grep -q "HTTP/1.[01] [23].."
  # if successful, output the URL
  [ $? -eq "0" ] && echo "FOUND: $url"
done


10. check the size of physical memory and virtual memory process used


ps -ax -o 'pid,pcpu,rsz,vsz' |  sort -nrk5


11. Add a swap partition manually


sudo mkswap /dev/XXX
If the previous command outputted an alphanumeric UUID, copy that now. Otherwise, find the UUID by running blkid again. Copy the UUID associated with /dev/XXX

sudo blkid
Now edit your /etc/fstab file to register your swap file. (I'm a Vim guy, but Nano is installed by default)

sudo nano /etc/fstab
On a separate line, enter the following information. Replace the X's with the UUID (without quotes)

UUID=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX none swap sw,pri=5 0 0
Save /etc/fstab, exit your text editor, and run the following command:

sudo swapon -a
If you get an error claiming it can't find your UUID, go back and edit /etc/fstab. Replace the UUID=XXX.. bit with the original /dev/XXX information.

sudo nano /etc/fstab
# Replace the UUID with /dev/XXX
/dev/XXX none swap sw,pri=5 0 0


12. Useful DNSMASQ

dnsmasq -u lxc-dnsmasq --strict-order --bind-interfaces --pid-file=/run/lxc/dnsmasq.pid --listen-address 10.0.3.1 --dhcp-range 10.0.3.2,10.0.3.254


13. install ubuntu fs

debootstrap --arch arm64 --foreign --verbose --components=main,universe --include=apt-transport-https,ssh,vim,language-pack-en xenial /var/cache/lxc/xenial/partial-arm64 http://ports.ubuntu.com/ubuntu-ports


14. Performance Monitor in Userspace 

Please refer to manual of perf_event_open



